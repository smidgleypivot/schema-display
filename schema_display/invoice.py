# generated by datamodel-codegen:
#   filename:  invoice_schema.json
#   timestamp: 2024-10-01T15:07:09+00:00

from __future__ import annotations

from datetime import date
from typing import List, Optional

from pydantic import BaseModel, Field, confloat


class BillingAddress(BaseModel):
    name: str
    streetAddress: str
    city: str
    state: str
    postalCode: str
    country: str


class ShippingAddress(BaseModel):
    name: str
    streetAddress: str
    city: str
    state: str
    postalCode: str
    country: str


class Item(BaseModel):
    description: str
    quantity: confloat(ge=1.0)
    unitPrice: confloat(ge=0.0)
    totalPrice: confloat(ge=0.0)


class Invoice(BaseModel):
    invoiceNumber: str = Field(..., description='Unique identifier for the invoice')
    invoiceDate: date = Field(..., description='Date the invoice was issued')
    dueDate: Optional[date] = Field(None, description='Date the payment is due')
    billingAddress: BillingAddress
    shippingAddress: Optional[ShippingAddress] = None
    items: List[Item]
    subtotal: confloat(ge=0.0) = Field(
        ..., description='Total amount before tax and discounts'
    )
    tax: confloat(ge=0.0) = Field(..., description='Tax amount')
    total: confloat(ge=0.0) = Field(
        ..., description='Total amount including tax and discounts'
    )
    paymentTerms: Optional[str] = Field(
        None, description='Payment terms for the invoice'
    )
    notes: Optional[str] = Field(
        None, description='Additional notes or comments for the invoice'
    )
